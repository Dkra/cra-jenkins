properties([
    gitLabConnection('roger-gitlab'),
    pipelineTriggers([
        [
            $class: 'GitLabPushTrigger',
            branchFilterType: 'All',
            triggerOnPush: true,
            triggerOnMergeRequest: false,
            ciSkip: true,
            skipWorkInProgressMergeRequest: true
        ]
    ])
])


node {
    currentBuild.result = "SUCCESS"
    try {

        stage 'Clone Project'
            updateGitlabCommitStatus name: 'build', state: 'pending'
            git 'https://gitlab.com/Dkra/cra-jenkins-dsl-example.git'
            sh """
                ls -al
            """
        stage 'Failed the job on purpose!'
            error("Failed the job test Gitlab & Slack notification!")

        stage 'Install NodeJS'
            sh """
                wget https://nodejs.org/dist/v8.11.3/node-v8.11.3-linux-x64.tar.xz
                tar -vxf node-v8.11.3-linux-x64.tar.xz
                export PATH="`pwd`/node-v8.11.3-linux-x64/bin:$PATH"
            """

        stage 'Npm install'
            sh """
                export PATH="`pwd`/node-v8.11.3-linux-x64/bin:$PATH"
                npm install
            """

        /*
        stage 'Test'
            sh """
                export PATH=`pwd`/node-v8.11.3-linux-x64/bin:$PATH
                npm run test
            """
        */

        stage 'Build'
            sh """
                export PATH="`pwd`/node-v8.11.3-linux-x64/bin:$PATH"
                npm run build
            """

        stage 'Notify Slack & GitLab'
          def attachments = [
            [
                text: 'Success! This is from Rogers Mac!',
                color: '#5afa60'
            ]
          ]
          slackSend(attachments: attachments)
          updateGitlabCommitStatus name: 'build', state: 'success'

    } catch (err) {
      def attachments = [
        [
            text: 'Failed! This is from Rogers Mac!',
            color: 'rgb(250, 40, 71)'
        ]
      ]

      slackSend(attachments: attachments)
      updateGitlabCommitStatus name: 'build', state: 'failed'

      throw err

    } finally {
       sh """
            rm -rf ./node_modules node-v8.*
        """
    }
}
